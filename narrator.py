# -*- coding: utf-8 -*-
"""
–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å/–æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏: stance, entry, target1, target2, stop, meta.
–ù–∏—á–µ–≥–æ ¬´—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ¬ª (–ø–∏–≤–æ—Ç—ã –∏ —Ç.–ø.) –Ω–∞—Ä—É–∂—É –Ω–µ –æ—Ç–¥–∞—ë–º.
"""

from typing import Any, Optional, Tuple

def _fmt_price(x: Optional[float]) -> str:
    return "‚Äî" if x is None else f"{x:,.2f}"

def _fmt_range(r: Optional[Tuple[float, float]]) -> str:
    if not r or len(r) != 2 or r[0] is None or r[1] is None:
        return "‚Äî"
    a, b = r
    if a > b:
        a, b = b, a
    return f"{a:,.2f}‚Ä¶{b:,.2f}"

def humanize(decision: Any) -> str:
    """
    –ü—Ä–∏–º–µ—Ä –æ–∂–∏–¥–∞–µ–º–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:
    decision = {
        "stance": "BUY" | "SHORT" | "WAIT",
        "entry": (low, high) | None,
        "target1": float | None,
        "target2": float | None,
        "stop": float | None,
        "meta": {"ticker": "QQQ", "price": 571.97, "horizon": "mid", "notes": "..."}
    }
    """
    d = decision
    stance = str(d.get("stance", "WAIT")).upper()
    entry = d.get("entry")
    t1 = d.get("target1")
    t2 = d.get("target2")
    st = d.get("stop")
    meta = d.get("meta") or {}

    ticker = meta.get("ticker", "").upper() or "‚Äî"
    price  = meta.get("price")
    hz     = meta.get("horizon", "")
    notes  = meta.get("notes")

    hz_label = {"short":"–¢—Ä–µ–π–¥ (1‚Äì5 –¥–Ω–µ–π)", "mid":"–°—Ä–µ–¥–Ω–µ—Å—Ä–æ–∫ (1‚Äì4 –Ω–µ–¥–µ–ª–∏)", "long":"–î–æ–ª–≥–æ—Å—Ä–æ–∫ (1‚Äì6 –º–µ—Å—è—Ü–µ–≤)"}.get(hz, "")

    head = f"üìä {ticker} ‚Äî —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {_fmt_price(price)}"
    if hz_label:
        head += f"\nüïí –ì–æ—Ä–∏–∑–æ–Ω—Ç: {hz_label}"

    if stance == "WAIT":
        body = "üü° –°–µ–π—á–∞—Å –ª—É—á—à–µ –ø–æ–¥–æ–∂–¥–∞—Ç—å ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–µ –Ω–∞ –Ω–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ. –ò—â–µ–º –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞."
        alt  = None
    elif stance == "BUY":
        body = (
            f"üü¢ –ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω: BUY\n"
            f"‚Ä¢ –í—Ö–æ–¥: {_fmt_range(entry)}\n"
            f"‚Ä¢ –¶–µ–ª–∏: {_fmt_price(t1)} / {_fmt_price(t2)}\n"
            f"‚Ä¢ –ó–∞—â–∏—Ç–∞ (—Å—Ç–æ–ø): {_fmt_price(st)}"
        )
        alt = "–ï—Å–ª–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π –ª–æ–º–∞–µ—Ç—Å—è ‚Äî –±—ã—Å—Ç—Ä–æ –≤—ã—Ö–æ–¥–∏–º –∏ –∂–¥—ë–º –Ω–æ–≤—É—é —Ñ–æ—Ä–º–∞—Ü–∏—é."
    elif stance == "SHORT":
        body = (
            f"üî¥ –ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω: SHORT\n"
            f"‚Ä¢ –í—Ö–æ–¥: {_fmt_range(entry)}\n"
            f"‚Ä¢ –¶–µ–ª–∏: {_fmt_price(t1)} / {_fmt_price(t2)}\n"
            f"‚Ä¢ –ó–∞—â–∏—Ç–∞ (—Å—Ç–æ–ø): {_fmt_price(st)}"
        )
        alt = "–ï—Å–ª–∏ –∏–º–ø—É–ª—å—Å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è ‚Äî –Ω–µ —Ç–∞—â–∏–º –ø–æ–∑–∏—Ü–∏—é —Å–∏–ª–æ–π, –∂–¥—ë–º –Ω–æ–≤–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ."
    else:
        body = "üü° –°–µ–π—á–∞—Å –ª—É—á—à–µ –ø–æ–¥–æ–∂–¥–∞—Ç—å."
        alt  = None

    tail_lines = []
    if notes:
        tail_lines.append(f"üí¨ –ó–∞–º–µ—á–∞–Ω–∏–µ: {notes}")
    if alt:
        tail_lines.append(f"‚ö†Ô∏è {alt}")

    msg = head + "\n\n" + body
    if tail_lines:
        msg += "\n\n" + "\n".join(tail_lines)
    return msg
